##############################################################
# => Plugin
##############################################################
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'

set -g @plugin 'dracula/tmux'
set -g @dracula-show-battery false
set -g @dracula-show-network true
set -g @dracula-show-weather false
set -g @dracula-show-time false
set -g @dracula-show-location false
set -g @dracula-show-fahrenheit false
set -g @dracula-show-powerline true
set -g @dracula-show-flags false
set -g @dracula-refresh-rate 5
set -g @dracula-military-time false
set -g @dracula-show-timezone false
set -g @dracula-show-left-icon "î˜’"
set -g @dracula-border-contrast false
set -g @dracula-cpu-usage false
set -g @dracula-ram-usage false
set -g @dracula-gpu-usage false

##############################################################
# Change prefix to Ctrl + j
unbind C-b
set -g prefix C-a
bind C-a send-prefix

##############################################################
# => VIM 
#############################################################
# vi is good
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi "v" send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe \
  "if command -v reattach-to-user-namespace >/dev/null; \
   then reattach-to-user-namespace pbcopy; \
   elif command -v xclip >/dev/null; \
   then xclip -selection clipboard; fi"

##############################################################

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on
set -g focus-events on
set -g default-terminal 'screen-256color'
set -ga terminal-overrides ",screen-256color:Tc"
set -s escape-time 0
set -g status-interval 2
set -g base-index 0
set -g pane-base-index 0
set -g mouse on
set-option -g status-position top
set-option -g repeat-time 0
set-option -g history-limit 1000000

# open new pane or window in current directory
bind '"' split-window -c "#{pane_current_path}"
bind '%' split-window -h -c "#{pane_current_path}"
bind 'c' new-window -c "#{pane_current_path}"
bind 'e' set-window-option synchronize-panes\; display-message "synchronize-panes is now #{?pane_synchronized,on,off}" 

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?(g?(view|n?vim?x?)(diff)?|fzf)$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

run '~/.tmux/plugins/tpm/tpm'
